Rhints

Here is the full set of things you can change in element_text:

element_text(family = NULL, face = NULL, colour = NULL, size = NULL,
  hjust = NULL, vjust = NULL, angle = NULL, lineheight = NULL,
  color = NULL)

gp <- ggplot(data=trows
            , aes(x=lifem,y=safe(mdmlosspct), color=factor(copies))
            ) 
gp <- gp + labs(color="Number of\nCopies")
gp <- fnPlotLogScales(gp, x="YES", y="YES"
                ,xbreaks=c(2,5,10,100,1000)
                ,ybreaks=c(0.01,0.10,1.00)
                )
gp <- gp + geom_point(data=trows
                , size=5
                , show.legend=TRUE
                ) 
gp <- gp + geom_line(
                  size=2
                , show.legend=TRUE
                )

gp <- gp + theme(legend.position=c(0.8,0.7))
gp <- gp + theme(legend.background=element_rect(fill="lightgray", 
                                  size=0.5, linetype="solid"))
gp <- gp + theme(legend.key.size=unit(0.3, "in"))
gp <- gp + theme(legend.key.width=unit(0.6, "in"))
gp <- gp + theme(legend.text=element_text(size=16))
gp <- gp + theme(legend.title=element_text(size=14))

plot + theme(legend.title = element_text(colour = 'red', angle = 45, size = 10, hjust = 3, vjust = 7, face = 'italic'))

g+theme(legend.title = element_text(colour="chocolate", size=16, face="bold"))+
  scale_color_discrete(name="This color is\ncalled chocolate!?")

%>% is a pipe that puts the LHS into the first arg of the function on the RHS.

select(df, col1, col2, ...)
filter(df, cond1, cond2, ...)
mutate(df, newcol1=expr1, newcol2=expr2, ...)
arrange(df, sortcol1, sortcol2, ...)

group_by(df, col1, col2, ...)
summarize(df, newcol1=expr1, newcol2=expr2, ...)
n() is count of items in group as new var into summarize

newdat <- alldat %>%
group_by(copies, lifem, auditfrequency, audittype, auditsegments) %>%
summarize(losspct=round(midmean(lost/docstotal)*100.0, 2), n=n())

# Solution 1
sp2 + geom_text(x=3, y=30, label="Scatter plot")
# Solution 2
sp2 + annotate(geom="text", x=3, y=30, label="Scatter plot",
              color="red")

gg +
  annotate("text", x = 0.075, y = 300000, label = "This text is amazing!")


library(grid)
# Create a text
grob <- grobTree(textGrob("Scatter plot", x=0.1,  y=0.95, hjust=0,
  gp=gpar(col="red", fontsize=13, fontface="italic")))
# Plot
sp2 + annotation_custom(grob)

# To overlay an image onto a plot
mypngfile <- download.file('http://api.altmetric.com/donut/502878_64x64.png', destfile = 'mypng.png', mode = 'wb')
library(png)
mypng <- readPNG('mypng.png')
p <- qplot(mpg, wt, data = mtcars) + theme_bw()
p + annotation_raster(mypng, ymin = 4.5,ymax= 5,xmin = 30,xmax = 35) + 
    geom_point()

# or maybe this
# reading image
img <- readPNG(system.file("img", "Rlogo.png", package = "png"))


# ggsave args
ggsave(filename = "foo300.png", ggplot(mtcars, aes(x=wt, y=mpg)) +
           geom_point(size=2, shape=23) + theme_bw(base_size = 10),
       width = 5, height = 4, dpi = 300, units = "in", device='png')
ggsave(filename = "foo150.png", ggplot(mtcars, aes(x=wt, y=mpg)) +
           geom_point(size=2, shape=23) + theme_bw(base_size = 10),
       width = 10, height = 8, dpi = 150, units = "in", device='png')

# Change key sizes in legends
theme(legend.key.width = unit(2, "line"))
theme(legend.key.size = unit(3,"line"))
or maybe
g + guides(color = guide_legend(override.aes = list(size=5)))

# Title appearance
bp + theme(legend.title = element_text(colour="blue", size=16, face="bold"))
# Label appearance
bp + theme(legend.text = element_text(colour="blue", size = 16, face = "bold"))

There are 3 ways to change the legend title.
Method 1: Using labs()

# Change legend titles
gg +
  labs(color = "State",
       size = "Density")
gg +
  guides(color = guide_legend("State"),
         size = guide_legend("Density"))

# Change labels and colors of legend items
gg +
  scale_color_manual(name = "State", 
                     labels = c("Illinois", 
                                "Indiana", 
                                "Michigan", 
                                "Ohio", 
                                "Wisconsin"), 
                     values = c("IL" = "blue", 
                                "IN" = "red", 
                                "MI" = "green", 
                                "OH" = "brown", 
                                "WI" = "orange"))


# Change the order of several legends
gg +
  guides(color = guide_legend(order = 2),
         size = guide_legend(order = 1))
         
# Move legend inside plot
# legend at bottom-right, inside the plot
gg + theme(
  legend.title = element_text(size = 12, color = "salmon", face = "bold"),
  legend.justification = c(1, 0),
  legend.position = c(0.95, 0.05),
  legend.background = element_blank(),
  legend.key = element_blank()
) +
  labs(subtitle = "Legend: Bottom-Right Inside the Plot")


# P A R A M S
sPlotFile <- "copies345vsunaudited.png"
fnGroupBy <- function(dfIn) {group_by(dfIn, copies, lifem
                                    , auditfrequency)}
fnSubset <- function(dfIn) {subset(dfIn, copies>=3 & copies<=5 
                                    & lifem<=1000
                                    & auditfrequency==10000)}
sTitleLine <-   (   "Failure to audit the collection is worse than keeping "
                %+% "\nonly a small number of audited copies "
                %+% "\n"
                %+% "\n(Copies=3,4,5, annual auditing vs no auditing, duration=10 years)"
                )
sLegendLabel <- "Number of\nCopies"
lLegendItemLabels <- c("3", "4", "5")
sXLabel <- ("1MB sector half-life (megahours)"
            %+% "                           (lower error rate =====>)")
sYLabel <- ("permanent document losses (%)")
# Also change summarize function and ggplot(color=...).

# G E T   D A T A  
# Get the data into the right form for these plots.
alldat.df <- fndfGetGiantDataRaw("")
newdat <- alldat.df %>% fnGroupBy() %>% 
summarize(mdmlosspct=round(midmean(lost/docstotal)*100.0, 2), n=n()) %>%
fnSubset()
trows <- newdat

# P L O T   D A T A 

gp <- ggplot(data=trows
            , aes(x=lifem,y=safe(mdmlosspct), color=factor(copies))
            ) 
gp <- gp + labs(color=sLegendLabel)





