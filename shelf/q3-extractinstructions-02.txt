# extract instruction file for extractvalues.py
# RBLandau 20141125, revised 20141130, revised 20150513.

# In the template line, all the variable names must be extracted (successfully)
#  by a line in the variables section below.  
# The template given here should always be blank-separated.  The extract program
#  can use a different separator if the user wishes.  

=template
{timestamp} {docsize} {copies} {lifem} {simlength} {seed} {lost} {docstotal} {docsokay} {docsrepairedmajority} {docsrepairedminority} {docslost} {auditcycles} {auditfrequency} {auditsegments} {auditrepairs} {auditmajority} {auditminority} {auditlost} {glitchfreq} {glitchimpact} {glitchdecay} {glitchmaxlife} {nglitches} {walltime} {cputime} {logfilename} {logfilesize} {instructionfilename} {todaysdatetime} {extractorversion} {mongoid}

# The header line will be output or not, depending on the 
#  --header CLI option or the "header" environment variable.  
# Bzzzt: new news: the header spec here is now irrelevant.  The 
#  header output will be the template with the braces stripped.  
#=header
#asdf asdf xyzzy qwerty iou jkl mnop 

# Be very careful constructing the regular expressions for this file.
# The lineregexes must match only the single line you want.  
#  re.search is used, so the regex does not have to begin at the beginning.
#  They may be enclosed in double quotes BUT NOT in single quotes.
#  If they contain any vertical bars, these must be escaped with backslash
#  so that they do not look like alternative choices.
# The valueregexes are there for grouping only, to extract the string
#  (usually a number) that you want.  Use the least specific expression
#  that works.
#  If a valueregex contains a vertical bar, it MUST be enclosed in 
#  single quotes (apostrophes).  If not, it MAY be.  
#  It MUST NOT be enclosed in double quotes, don't ask me why.  
#  To avoid the problems with vertical bars, mainly I just use dots
#  to skip over them.  
# If the word number for the valueregex is zero (0), then the 
#  entire line is used.  Sometimes it is easier to find a field
#  with regex context than to count reliably past five.  


# CSV section specifying where to get the variables for output.
=variables
varname,lineregex,wordnumber,valueregex

# The docsize here assumes that the quality=1 doc is 100% some size.
docsize,"DOCUMENT value.1.*percent.100",8,(\d+)
# And, similarly, that we are concerned only how many copies of 
#  quality=1 docs.  
copies,"PARAMS INFO.*DISTRIBUTION.*value.1",8,(\d+)

# Changed the name from "ber" to "lifek" to signal that this is really
#  the sector lifetime in kilo-hours.  Since this number is 
#  well up in the thousands itself, that's millions of hours total.  
#  (ber = Bit Error Rate is a thing of the past.)
#  (Also note that this is exponential expected lifetime, which 
#  differs from half-life by a factor of sqrt(2).)
lifek,"PARAMS INFO.*SHELF.*quality.1",7,smallfailrate.(\d+)
lifem,"PARAMS INFO.*SHELF.*quality.1",7,smallfailrate.(\d+)000
simlength,"PARAMS INFO.*timelimit",8,timelimit.(\d+)

# Include the seed so that we can recover the original log filename if needed.
seed,PARAMS INFO.*seed,7,(\d+)

# Include the MongoDB _id field so we can declare a job done.  
mongoid,"Command line",0,--mongoid=.([0-9a-fA-F]+)

# How many docs lost, according to the final evaluation.  
lost,NEWS,16,(\d+)

# Document Collection statistics, again assuming only one collection.
docstotal,COLLECTIONTOTALS,9,ndocs.(\d+)
docsokay,COLLECTIONTOTALS,10,nokay.(\d+)
docsrepairedmajority,COLLECTIONTOTALS,11,nmajority.(\d+)
docsrepairedminority,COLLECTIONTOTALS,12,nminority.(\d+)
docslost,COLLECTIONTOTALS,13,nlost.(\d+)

auditcycles,AUDITTOTALS,6,ncycles.(\d+)
auditfrequency,AUDITTOTALS,7,nfrequency.(\d+)
auditsegments,AUDITTOTALS,8,nsegments.(\d+)
auditrepairs,AUDITTOTALS,9,nrepairs.(\d+)
auditmajority,AUDITTOTALS,10,nmajority.(\d+)
auditminority,AUDITTOTALS,11,nminority.(\d+)
auditlost,AUDITTOTALS,12,nlost.(\d+)

glitchfreq,GLITCH,6,freq.(\d+)
glitchimpact,GLITCH,7,impact.(\d+)
glitchdecay,GLITCH,8,decay.(\d+)
glitchmaxlife,GLITCH,9,maxlife.(\d+)
nglitches,LIFETIME,7,glitches.(\d+)

timestamp,"MAIN INFO.*Simulation parameters",1,([1234567890_]+)
walltime,"MAIN.*End time stats",0,wall. *([0-9\.]+)
cputime,"MAIN.*End time stats",0,cpu. *([0-9\.]+)

#END
