# brokerinstructions.txt
#
# Sequence of instructions to be expanded and executed by the broker for each
#  instruction chosen from the database.
# Values will be substituted into these commands from the instructions 
#  (so the field names better match precisely)
#  and then the sequence will be packaged into a .cmds file 
#  and a process spawned to execute the commands when a core is free.  

# These commands must be SINGLE LINES.  No backslash-return foolishness.
# As usual, blank lines and comment lines will be removed from the sequence.

#---------------------------------------------

# For the record, start time.
date +%Y%m%d_%H%M%S.%3N

# Make sure we have the right version of bash and Python.
sh --version
python -c 'import sys; print sys.version; print sys.version_info'

# Actual simulation command.
# Be sure when selecting the instruction set for a long run that you
#  include selection values or ranges for ALL the parameters 
#  to eliminate any irrelevant instructions.  
#  For instance, stating  --glitchfreq=0  is NOT enough to force no 
#  glitch instructions to be expanded.  You must also include
#  --glitchimpact=100 --glitchdecay=0 --glitchmaxlife=0
#  Otherwise redundant instructions will be fetched and time will be wasted.  
# Singletons such as docsize and audittype can be ignored at one's risk: 
#  will they always remain singletons?

python main.py {sFamilyDir} {sSpecificDir} {nSimlen} {nRandomseed} --ncopies={nCopies} --lifek={nLifem}000 --audit={nAuditFreq} --auditsegments={nAuditSegments} --audittype={sAuditType} --glitchfreq={nGlitchFreq} --glitchimpact={nGlitchImpact} --glitchdecay={nGlitchDecay} --glitchmaxlife={nGlitchMaxlife} --shelfsize={nShelfSize} --mongoid=\'{_id}\'  >  {sFamilyDir}/{sSpecificDir}/log/{sShelfLogFileName}.log  2>&1

# Data extraction command.  Header must be forced here so that the 
#  cleanup program can label the data fields correctly.

python extractvalues.py --header --separator=' ' q3-extractinstructions.txt {sFamilyDir}/{sSpecificDir}/log/{sShelfLogFileName}.log  >  {sFamilyDir}/{sSpecificDir}/ext/{sShelfLogFileName}.ext

# Data cleanup command.  

python datacleanup.py test_database done {sFamilyDir}/{sSpecificDir}/ext/{sShelfLogFileName}.ext {sFamilyDir}/{sSpecificDir}/dat/GiantOutput_00.txt  --separator=' ' --donotdelete=Y

# End time
date +%Y%m%d_%H%M%S.%3N

#END
